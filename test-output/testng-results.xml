<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="4" total="12" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-11-10T18:20:17 IST" name="Loan Department" finished-at="2024-11-10T18:20:18 IST" duration-ms="88">
    <groups>
      <group name="smoke">
        <method signature="Demo2.demo()[pri:0, instance:testPackage.Demo2@3d74bf60]" name="demo" class="testPackage.Demo2"/>
        <method signature="demo4.apiLoginHomeLoan()[pri:0, instance:testPackage.demo4@3427b02d]" name="apiLoginHomeLoan" class="testPackage.demo4"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2024-11-10T18:20:17 IST" name="Personal Loan" finished-at="2024-11-10T18:20:18 IST" duration-ms="81">
      <class name="testPackage.demo4">
        <test-method signature="webLoginHomeLoan(java.lang.String)[pri:0, instance:testPackage.demo4@3427b02d]" started-at="2024-11-10T18:20:17 IST" name="webLoginHomeLoan" finished-at="2024-11-10T18:20:17 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[personalLoan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLoginHomeLoan -->
        <test-method signature="apiLoginHomeLoan()[pri:0, instance:testPackage.demo4@3427b02d]" started-at="2024-11-10T18:20:17 IST" name="apiLoginHomeLoan" finished-at="2024-11-10T18:20:17 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiLoginHomeLoan -->
        <test-method signature="mobileLoginHomeLoan()[pri:0, instance:testPackage.demo4@3427b02d]" started-at="2024-11-10T18:20:17 IST" name="mobileLoginHomeLoan" finished-at="2024-11-10T18:20:17 IST" depends-on-methods="testPackage.demo4.webLoginHomeLoan" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileLoginHomeLoan -->
      </class> <!-- testPackage.demo4 -->
      <class name="testPackage.Demo2">
        <test-method is-config="true" signature="imp()[pri:0, instance:testPackage.Demo2@3d74bf60]" started-at="2024-11-10T18:20:17 IST" name="imp" finished-at="2024-11-10T18:20:17 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- imp -->
        <test-method signature="demo()[pri:0, instance:testPackage.Demo2@3d74bf60]" started-at="2024-11-10T18:20:17 IST" name="demo" finished-at="2024-11-10T18:20:17 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo -->
        <test-method is-config="true" signature="last()[pri:0, instance:testPackage.Demo2@3d74bf60]" started-at="2024-11-10T18:20:17 IST" name="last" finished-at="2024-11-10T18:20:17 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- last -->
      </class> <!-- testPackage.Demo2 -->
    </test> <!-- Personal Loan -->
    <test started-at="2024-11-10T18:20:17 IST" name="Car Loan" finished-at="2024-11-10T18:20:18 IST" duration-ms="88">
      <class name="testPackage.demo3">
        <test-method is-config="true" signature="befMet()[pri:0, instance:testPackage.demo3@4cc451f2]" started-at="2024-11-10T18:20:17 IST" name="befMet" finished-at="2024-11-10T18:20:17 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- befMet -->
        <test-method signature="LoginAll(java.lang.String,java.lang.String)[pri:0, instance:testPackage.demo3@4cc451f2]" started-at="2024-11-10T18:20:17 IST" name="LoginAll" data-provider="getData" finished-at="2024-11-10T18:20:17 IST" duration-ms="15" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[first password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAll -->
        <test-method is-config="true" signature="aftMet()[pri:0, instance:testPackage.demo3@4cc451f2]" started-at="2024-11-10T18:20:17 IST" name="aftMet" finished-at="2024-11-10T18:20:17 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftMet -->
        <test-method signature="LoginAll(java.lang.String,java.lang.String)[pri:0, instance:testPackage.demo3@4cc451f2]" started-at="2024-11-10T18:20:17 IST" name="LoginAll" data-provider="getData" finished-at="2024-11-10T18:20:17 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[second password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAll -->
        <test-method is-config="true" signature="befMet()[pri:0, instance:testPackage.demo3@4cc451f2]" started-at="2024-11-10T18:20:17 IST" name="befMet" finished-at="2024-11-10T18:20:17 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- befMet -->
        <test-method is-config="true" signature="aftMet()[pri:0, instance:testPackage.demo3@4cc451f2]" started-at="2024-11-10T18:20:17 IST" name="aftMet" finished-at="2024-11-10T18:20:17 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftMet -->
        <test-method is-config="true" signature="befMet()[pri:0, instance:testPackage.demo3@4cc451f2]" started-at="2024-11-10T18:20:17 IST" name="befMet" finished-at="2024-11-10T18:20:17 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- befMet -->
        <test-method signature="LoginAll(java.lang.String,java.lang.String)[pri:0, instance:testPackage.demo3@4cc451f2]" started-at="2024-11-10T18:20:17 IST" name="LoginAll" data-provider="getData" finished-at="2024-11-10T18:20:17 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[third password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAll -->
        <test-method is-config="true" signature="befMet()[pri:0, instance:testPackage.demo3@4cc451f2]" started-at="2024-11-10T18:20:17 IST" name="befMet" finished-at="2024-11-10T18:20:17 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- befMet -->
        <test-method is-config="true" signature="aftMet()[pri:0, instance:testPackage.demo3@4cc451f2]" started-at="2024-11-10T18:20:17 IST" name="aftMet" finished-at="2024-11-10T18:20:17 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftMet -->
        <test-method signature="webLoginCarLoan(java.lang.String)[pri:0, instance:testPackage.demo3@4cc451f2]" started-at="2024-11-10T18:20:17 IST" name="webLoginCarLoan" finished-at="2024-11-10T18:20:18 IST" duration-ms="6" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[carLoan.com]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at testPackage.demo3.webLoginCarLoan(demo3.java:19)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLoginCarLoan -->
        <test-method is-config="true" signature="aftMet()[pri:0, instance:testPackage.demo3@4cc451f2]" started-at="2024-11-10T18:20:18 IST" name="aftMet" finished-at="2024-11-10T18:20:18 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftMet -->
      </class> <!-- testPackage.demo3 -->
      <class name="testPackage.demo4">
        <test-method is-config="true" signature="Alpha()[pri:0, instance:testPackage.demo4@3427b02d]" started-at="2024-11-10T18:20:17 IST" name="Alpha" finished-at="2024-11-10T18:20:17 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Alpha -->
        <test-method is-config="true" signature="Zeta()[pri:0, instance:testPackage.demo4@3427b02d]" started-at="2024-11-10T18:20:18 IST" name="Zeta" finished-at="2024-11-10T18:20:18 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Zeta -->
      </class> <!-- testPackage.demo4 -->
    </test> <!-- Car Loan -->
  </suite> <!-- Loan Department -->
</testng-results>
